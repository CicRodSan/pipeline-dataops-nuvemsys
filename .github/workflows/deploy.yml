name: Deploy to Azure

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create Resource Group
      run: |
        echo "Creating resource group..."
        az group create \
          --name my-resource-group \
          --location eastus

    - name: Deploy Bicep template
      run: |
        echo "Deploying Bicep template..."
        az deployment group create \
          --resource-group my-resource-group \
          --template-file infra/main.bicep \
          --parameters @infra/parameters.json

    - name: List Resources in Resource Group
      run: |
        echo "Listing resources in the group..."
        az resource list --resource-group my-resource-group

    - name: Install Azure CLI Data Factory Extension
      run: |
        echo "Installing Azure CLI Data Factory extension..."
        az extension add --name datafactory --yes

    # Steps to deploy Linked Service and Datasets
    - name: Get Storage Account Key
      id: storage_key
      run: |
        echo "Getting storage account key..."
        STORAGE_KEY=$(az storage account keys list --resource-group my-resource-group --account-name datavalidation456 --query "[0].value" -o tsv)
        echo "::set-output name=key::$STORAGE_KEY"

    - name: Deploy Azure Blob Storage Linked Service
      run: |
        echo "Deploying Azure Blob Storage Linked Service..."
        linked_service_content=$(cat infra/pipelines/linkedservice_blobstorage.json)
        # Replace placeholders
        linked_service_content=${linked_service_content/<STORAGE_ACCOUNT_NAME>/datavalidation456}
        linked_service_content=${linked_service_content/<STORAGE_ACCOUNT_KEY>/${{ steps.storage_key.outputs.key }}}

        az datafactory linked-service create \
          --factory-name DataValidationFactoryUnique \
          --resource-group my-resource-group \
          --linked-service-name AzureBlobStorageLinkedService \
          --properties "$linked_service_content"

    - name: Deploy FonteDados Dataset
      run: |
        echo "Deploying FonteDados Dataset..."
        dataset_content=$(cat infra/pipelines/dataset_fontedados.json)
        az datafactory dataset create \
          --factory-name DataValidationFactoryUnique \
          --resource-group my-resource-group \
          --dataset-name FonteDados \
          --properties "$dataset_content"

    - name: Deploy DestinoDados Dataset
      run: |
        echo "Deploying DestinoDados Dataset..."
        dataset_content=$(cat infra/pipelines/dataset_destinodados.json)
        az datafactory dataset create \
          --factory-name DataValidationFactoryUnique \
          --resource-group my-resource-group \
          --dataset-name DestinoDados \
          --properties "$dataset_content"
    
    # End of new steps

    - name: Validate Data Factory Creation
      run: |
        echo "Validating Azure Data Factory creation..."
        # Use single backslash for line continuation
        az datafactory show \
          --name DataValidationFactoryUnique \
          --resource-group my-resource-group

    - name: Deploy Data Factory pipelines
      run: |
        echo "Deploying Data Factory pipelines..."
        pipeline_content=$(cat infra/pipelines/ingestao.adf.json)
        # Use single backslash for line continuation
        az datafactory pipeline create \
          --factory-name DataValidationFactoryUnique \
          --resource-group my-resource-group \
          --name PipelineIngestao \
          --pipeline "$pipeline_content"

    - name: Register Resource Provider
      run: |
        echo "Registering microsoft.operationalinsights..."
        az provider register --namespace microsoft.operationalinsights

    - name: Validate Resource Provider Registration
      run: |
        echo "Validating registration of microsoft.operationalinsights..."
        az provider show --namespace microsoft.operationalinsights --query "registrationState"

    - name: Diagnose Bicep Deployment
      run: |
        echo "Diagnosing Bicep deployment..."
        az deployment group show \
          --resource-group my-resource-group \
          --name main

    - name: Validate Resource Group
      run: |
        echo "Validating resource group existence..."
        az group show --name my-resource-group

    - name: Validate Storage Account
      run: |
        echo "Validating Storage Account creation..."
        az storage account show --name datavalidation456 --resource-group my-resource-group # Name matches parameters.json

    - name: Validate SQL Server
      run: |
        echo "Validating SQL Server creation..."
        az sql server show --name datavalidation-sqlserver12345 --resource-group my-resource-group # Corrected name

